<%= render 'client' %>

<script>

  // template sources

  var todoItemsTemplate = $('[data-todo-items-template]').html();

  var todoItemTemplate = $('[data-todo-item-template]').html();

  // mock todo data

  var todoItems = {
    complete: [{title: "a"}, {title: "b"}],
    incomplete: [{title: "c"}, {title: "d"}],
    in_progress: [{title: "e"}, {title: "f"}]
  }

  // render helpers

  var renderTodoItem = function(todoListItem) {
    return Mustache.render(todoItemTemplate, todoListItem);
  }

  var renderTodoItems = function(todoItems) {
    return Mustache.render(todoItemsTemplate, {
      todoItems: _.map(todoItems, renderTodoItem).join('')
    });
  }

  // mock list data

  // View classes

  var TodoListsView = Backbone.View.extend({

    render: function() {
      var listsData = this.collection
      this.$el.html(this.renderLists(listsData));
    },

    renderLists: function(lists) {
      var _this = this;
      return _.map(lists.models, function(listModel){
        return Mustache.render(_this.todoListTemplate, listModel.attributes);
      }).join('');
    },

    todoListTemplate: $('[data-todo-list-template]').html()

  });

  var TodoListCreatorView = Backbone.View.extend({
    initialize: function(){
      var _this = this;
      this.$el.on('submit', function(event){
        event.preventDefault();
        _this.model.save({name: "test"});
      })
      // _this.model.on('su?')
    }
  });

  var NewTodoListModel = Backbone.Model.extend({

  });

  var TodoListsCollection = Backbone.Collection.extend({  });



  // Application Init

  Backbone.sync = function(){};

  var app = {}
  window.app = app;

  var newTodoListModel = new NewTodoListModel({});
  newTodoListModel.on('change', function(){ })
  var todoListCollection = new TodoListsCollection([
    {
      name: "Our list name!!",
      id: 1,
      completedTodoItems: renderTodoItems(todoItems.complete),
      wipTodoItems: renderTodoItems(todoItems.incomplete),
      incompleteTodoItems: renderTodoItems(todoItems.in_progress)
    }
  ]);

  app.todoListView = new TodoListsView({el: $('.todo-lists'), collection: todoListCollection});
  app.todoListView.render();

  app.todoListCreatorView = new TodoListCreatorView({el: $('.list-creator'), model: newTodoListModel});

  $('body').removeClass('loading');

</script>
